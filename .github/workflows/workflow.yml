name: main-worklfow

env:
  IMAGE_NAME: sarapuce/${{ github.repository }}
  REGISTRY: ghcr.io
  KUBECTL_VERSION: "1.14.10"
  KUSTOMIZE_VERSION: "3.5.4"

permissions:
  packages: write

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Run all unit tests.
  run-tests:
    runs-on: ubuntu-latest
    steps:
      # Check out the pull request's source code.
      - name: Check out source code
        uses: actions/checkout@v3

      # Install Go.
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1.14" # The Go version to download and use.

      - name: Print Go version
        run: go version

      - name: Run unit tests
        run: go test -v ./...


  # Build and release.
  build-and-release:
    needs: 
      - "run-tests"
    runs-on: ubuntu-latest
    steps:
      # Check out source code.
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Deploy to Kubernetes.
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - run-tests
      - build-and-release
    steps:
    # Check out source code.
    - name: Check out source code
      uses: actions/checkout@v3
    
    # Set up kubectl.
    - name: Set up kubectl
      run: |-
        curl -sfLo kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
    
    # Configure kubectl.
    - name: Configure kubectl
      run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig.yml
    
    # Set up Kustomize.
    - name: Set up Kustomize
      run: |-
        curl -sfL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz | tar -xzf -
        sudo mv kustomize /usr/local/bin/
    
    # Kustomize Kubernetes resources.
    - name: Kustomize Kubernetes resources
      working-directory: ./manifests
      run: kustomize edit set image ghcr.io/sarapuce/sarapuce/github-actions-tutorial:master
      # run: kustomize edit set image "${REGISTRY}"/"${IMAGE_NAME}":sha-"${GITHUB_SHA::7}"

    # Deploy to Kubernetes.
    - name: Deploy to Kubernetes
      run: kubectl --kubeconfig kubeconfig.yml apply --kustomize manifests/

    # Validate deployment.
    - name: Validate deployment
      run: kubectl --kubeconfig kubeconfig.yml rollout status --timeout 120s deployment/foobar
